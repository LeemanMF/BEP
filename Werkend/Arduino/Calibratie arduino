#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <utility/imumaths.h>
#include <Arduino.h>

/* This driver reads raw data from the BNO055

   Connections
   ===========
   Connect SCL to analog 5
   Connect SDA to analog 4
   Connect VDD to 3.3V DC
   Connect GROUND to common ground

   History
   =======
   2015/MAR/03  - First release (KTOWN)
*/
/* Set the delay between fresh samples */
#define BNO055_SAMPLERATE_DELAY_MS (100)

// Check I2C device address and correct line below (by default address is 0x29 or 0x28)
//                                   id, address
Adafruit_BNO055 bno = Adafruit_BNO055(-1, 0x28, &Wire);

void setup(void)
{
  Serial.begin(115200);

  while (!Serial) delay(10);  // wait for serial port to open!

  // Serial.println("Orientation Sensor Raw Data Test"); Serial.println("");

  /* Initialise the sensor */
  if(!bno.begin())
  {
    /* There was a problem detecting the BNO055 ... check your connections */
    // Serial.print("Ooops, no BNO055 detected ... Check your wiring or I2C ADDR!");
    while(1);
  }


  bno.setExtCrystalUse(true);
}
  // Serial.println("Calibration status values: 0=uncalibrated, 3=fully calibrated");

/**************************************************************************/
/*
    Arduino loop function, called once 'setup' is complete (your own code
    should go here)
*/
/**************************************************************************/
void loop(void)
{
  /* Get the four calibration values (0..3) */
  /* Any sensor data reporting 0 should be ignored, */
  /* 3 means 'fully calibrated" */
  uint8_t system, gyro, acc, mag;
  system = gyro = acc = mag = 0;
  bno.getCalibration(&system, &gyro, &acc, &mag);

  /* Display the individual values */
  Serial.print("Sys:");
  Serial.print(system, DEC);
  Serial.print(" G:");
  Serial.print(gyro, DEC);
  Serial.print(" Acc:");
  Serial.print(acc, DEC);
  Serial.print("mag:");
  Serial.println(mag, DEC);

}

// void loop(void)
// {
//   // Possible vector values can be:
//   // - VECTOR_ACCELEROMETER - m/s^2
//   // - VECTOR_MAGNETOMETER  - uT
//   // - VECTOR_GYROSCOPE     - rad/s
//   // - VECTOR_EULER         - degrees
//   // - VECTOR_LINEARACCEL   - m/s^2
//   // - VECTOR_GRAVITY       - m/s^2
//   int euler;
//   int gyr;

//   uint8_t gyr = euler =0;
//   bno.getCalibration(&sys, &gyr, &euler);

//   imu::Vector<3> euler = bno.getVector(Adafruit_BNO055::VECTOR_EULER);
//   imu::Vector<3> gyr = bno.getVector(Adafruit_BNO055::VECTOR_GYROSCOPE);

//   if (euler < 3);
//    {Serial.print("calibrating...");
//    Serial.print(gyr);
//    Serial.print(",");
//    Serial.println(euler);
//   } 
 
//   /* Display the floating point data */
 
//   Serial.print(euler.y());
//   Serial.print(",");
//   Serial.print(euler.z());
//   Serial.print(",");
//   Serial.print(gyr.y());
//   Serial.print(",");
//   Serial.println(gyr.z());
//   delay(500);
//   // /* Display calibration status for each sensor. */

//   // 
//   // delay(BNO055_SAMPLERATE_DELAY_MS);
// }
