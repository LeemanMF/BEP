#include <Arduino.h>
#include <SoftwareSerial.h>

#define ENCA 3 // YELLOW
#define ENCB 2 // WHITE
#define PWM 5
#define IN2 6
#define IN1 7

void setup() {
  Serial.begin(9600);
  pinMode(ENCA,INPUT);
  pinMode(ENCB,INPUT);
//  attachInterrupt(digitalPinToInterrupt(ENCA),readEncoder,RISING);
  
  pinMode(PWM,OUTPUT);
  pinMode(IN1,OUTPUT);
  pinMode(IN2,OUTPUT);
  
//  Serial.println("target pos");
}

void loop() {

  // set target position
//  int target = 1200;
  // int target = 250*sin(prevT/1e6);

  // PID constants
//  float kp = 1;
//  float kd = 0.025;
//  float ki = 0.0;

//  // time difference
//  long currT = micros();
//  float deltaT = ((float) (currT - prevT))/( 1.0e6 );
//  prevT = currT;
//
//  // Read the position
//  int pos = 0; 
//  noInterrupts(); // disable interrupts temporarily while reading
//  pos = posi;
//  interrupts(); // turn interrupts back on
//  
//  // error
//  int e = pos - target;
//
//  // derivative
//  float dedt = (e-eprev)/(deltaT);
//
//  // integral
//  eintegral = eintegral + e*deltaT;

  // control signal
//  float u = kp*e + kd*dedt + ki*eintegral;

  // motor power
  float pps = Serial.read();
  int dir;
  
  // motor direction
  if(pps<0){
    dir = -1;
    pps = abs(min(pps,0));
    }
  else if(pps>0){
    dir = 1;
    pps = max(0,pps);
    }

  int range = 64000; //max hoeveelheid
  int motor_value = pps*255/range;

// signal the motor
  setMotor(dir,motor_value,PWM,IN1,IN2);

  //Serial.println(motor_value);
  }

  // store previous error
//  eprev = e;

//  Serial.print(target);
//  Serial.print(" ");
//  Serial.print(pos);
//  Serial.println();


void setMotor(int dir, int motor_value, int pwm, int in1, int in2){
  analogWrite(pwm,motor_value);
  if(dir == 1){
    digitalWrite(in1,HIGH);
    digitalWrite(in2,LOW);
  }
  else if(dir == -1){
    digitalWrite(in1,LOW);
    digitalWrite(in2,HIGH);
  }
  else{
    digitalWrite(in1,LOW);
    digitalWrite(in2,LOW);
  }  
}

//void readEncoder(){
//  int b = digitalRead(ENCB);
//  if(b > 0){
//    posi++;
//  }
//  else{
//    posi--;
// println(b) }
//}
